{"version":3,"sources":["webpack:///./src/hooks/index.js","webpack:///./src/components/SearchItem/SearchItem.js","webpack:///./src/pages/pesquisar.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["urlToFetch","returnLocationProperty","useFetchWPAPI","props","fetchRef","useRef","useState","isQuerying","results","search","hasFinished","query","setQuery","useEffect","searchUrl","location","URLSearchParams","get","updateState","clearTimeout","current","setTimeout","fetchAPI","obj","v","a","fetch","response","json","value","target","SearchItem","link","title","excerpt","data-testid","css","xLargeMgBottom","href","replaceWpPrefix","secondTitle","text","dangerouslySetInnerHTML","__html","linkStyle","inputStyle","Search","onTextChange","Wrapper","small","pageTitle","placeholder","onChange","type","length","map","result","index","key","rendered","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","makeInvokeMethod","fn","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-pesquisar-js-47796779f05fd8c47e36.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\"\nimport { returnLocationProperty } from \"./../utils\"\n\nconst delayToFetch = 1000\nconst urlProd = returnLocationProperty(\"origin\")\nconst urlMock = \"https://blog.gamedii.com.br\"\nconst WPAPISearch = \"wp/wp-json/wp/v2/posts?search=\"\n// eslint-disable-next-line no-undef\nconst isProd =\n  process.env.NODE_ENV !== \"development\" &&\n  process.env.NODE_ENV !== \"local:server\"\nconst urlToFetch = `${isProd ? urlProd : urlMock}/${WPAPISearch}`\n\nexport const useFetchWPAPI = props => {\n  const fetchRef = useRef(null)\n  const [query, setQuery] = useState({\n    isQuerying: false,\n    results: [],\n    search: \"\",\n    hasFinished: false,\n  })\n\n  useEffect(() => {\n    const searchUrl = props?.location?.search\n    var searchParams = new URLSearchParams(searchUrl)\n    const search = searchParams.get(\"s\")\n    search && updateState({ search })\n  }, [])\n\n  useEffect(() => {\n    if (query.search) {\n      clearTimeout(fetchRef.current)\n      fetchRef.current = setTimeout(fetchAPI, delayToFetch)\n    }\n  }, [query.search])\n\n  const updateState = (obj = {}) => {\n    setQuery(v => ({\n      ...v,\n      ...obj,\n    }))\n  }\n\n  const fetchAPI = async () => {\n    try {\n      updateState({ isQuerying: true })\n      const response = await fetch(`${urlToFetch}${query.search}`)\n      const results = await response.json()\n      updateState({ isQuerying: false, results, hasFinished: true })\n    } catch (err) {\n      updateState({ isQuerying: false, hasFinished: true })\n    }\n  }\n\n  const onTextChange = ({ target: { value } }) => {\n    updateState({\n      results: [],\n      hasFinished: false,\n      search: value,\n    })\n  }\n\n  return [query, onTextChange]\n}\n","/** @jsx jsx */\nimport PropTypes from \"prop-types\"\nimport { jsx } from \"@emotion/core\"\nimport { secondTitle, text, linkStyle, xLargeMgBottom } from \"./../../design\"\nimport { replaceWpPrefix } from \"./../../utils\"\n\nconst SearchItem = ({ link, title, excerpt }) => {\n  return (\n    <div data-testid=\"search-result-item\" css={xLargeMgBottom}>\n      <a href={replaceWpPrefix(link)}>\n        <h1 css={secondTitle}>{title}</h1>\n      </a>\n      <div css={text} dangerouslySetInnerHTML={{ __html: excerpt }} />\n      <a css={linkStyle} href={replaceWpPrefix(link)}>\n        Ler mais\n      </a>\n    </div>\n  )\n}\n\nSearchItem.propTypes = {\n  excerpt: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default SearchItem\n","/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport { pageTitle, text } from \"../design\"\nimport Wrapper from \"../components/Wrapper\"\nimport { useFetchWPAPI } from \"../hooks\"\nimport SearchItem from \"../components/SearchItem\"\n\nconst inputStyle = css`\n  width: 100%;\n  border-radius: 5px;\n  border: 1px solid #cacaca;\n  padding: 10px;\n  font-size: 22px;\n  margin-bottom: 5px;\n`\n\nconst Search = props => {\n  const [query, onTextChange] = useFetchWPAPI(props)\n\n  return (\n    <Wrapper small>\n      <h2 data-testid=\"page-title\" css={pageTitle}>\n        Pesquisar\n      </h2>\n      <input\n        data-testid=\"input-search\"\n        css={inputStyle}\n        placeholder=\"Pesquisa por palavra-chave\"\n        onChange={onTextChange}\n        type=\"text\"\n        value={query.search}\n      />\n      {query.isQuerying && query.search && <p css={text}>Pesquisando...</p>}\n      {query.search && query.hasFinished && (\n        <p css={text}>Resultados: {query.results.length}</p>\n      )}\n\n      {query.results.map((result, index) => (\n        <SearchItem\n          key={index}\n          link={result.link}\n          excerpt={result.excerpt.rendered}\n          title={result.title.rendered}\n        />\n      ))}\n    </Wrapper>\n  )\n}\n\nexport default Search\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}